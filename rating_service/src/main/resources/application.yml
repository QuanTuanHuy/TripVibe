spring:
  application:
    name: rating_service
  datasource:
    username: user_booking
    password: secret
    url: jdbc:postgresql://localhost:5433/db_rating_service
    driver-class-name: org.postgresql.Driver
  data:
    redis:
      host: localhost
      port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: rating_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 10
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8089
  servlet:
    context-path: /rating_service

app:
  services:
    booking_service:
      url: localhost:8084/booking_service/
    profile_service:
      url: localhost:8086/profile_service/
    accommodation_service:
      url: localhost:8083/accommodation_service/
  security:
    jwt:
      secret: MnAYFOKwxBOznHpxA3Wx4cJjeC3vYNtwzI6HRYT9SD++1BM9Pk32pTGETroljFsS
      expiration: 86400000
      header: Authorization
      prefix: Bearer
    filter:
      publicUrls:
        - first: /api/public/v1/ratings/**
          second: GET
        - first: /api/public/v1/rating_summaries/**
          second: GET
        - first: /api/public/v1/statistics/**
          second: GET
      protectedUrls:
