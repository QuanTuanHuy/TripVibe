services:
  mysql:
    image: mysql:8.0.38
    container_name: db_booking
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3309:3306"
    volumes:
      - db:/var/lib/mysql
    networks:
      - booking_network

  redis:
    image: redis:7.2.4-alpine
    container_name: redis_booking
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - booking_network
  booking_postgre_db:
    image: postgres:latest
    container_name: booking_postgre_db
    environment:
      POSTGRES_USER: user_booking
      POSTGRES_PASSWORD: secret
    ports:
      - "5433:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - booking_network
      
  inventory_db:
    image: postgres:latest
    container_name: inventory_db
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - inventory_db_data:/var/lib/postgresql/data
    networks:
      - booking_network

  broker:
    image: 'bitnami/kafka:3.7.0'
    container_name: booking_kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  inventory_service:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile
    container_name: inventory_service
    ports:
      - "8083:8083"
    depends_on:
      - inventory_db
      - redis
      - broker
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://inventory_db:5432/inventory_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - booking_network

  elastic:
    image: elasticsearch:8.16.1
    container_name: booking_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - booking_network
volumes:
  db:
    driver: local
  postgres:
  inventory_db_data:
    driver: local
  es-data:
    driver: local

networks:
  booking_network:
    driver: bridge