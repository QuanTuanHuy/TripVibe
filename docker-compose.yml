services:
  authentication_service:
    image: auth_service
    build:
      context: ./authentication_service
      dockerfile: Dockerfile
    container_name: authentication_service
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - redis
      - kafka
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=authentication_service
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - REDIS_HOST=redis
    networks:
      - booking_network
  
  # rating_service:
  #   image: rating_service
  #   build:
  #     context: ./rating_service
  #     dockerfile: Dockerfile
  #   container_name: rating_service
  #   ports:
  #     - "8089:8089"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - kafka
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=user_booking
  #     - DB_PASSWORD=secret
  #     - DB_NAME=db_rating_service
  #     - KAFKA_HOST=kafka
  #     - KAFKA_PORT=9092
  #     - REDIS_HOST=redis
  #   networks:
  #     - booking_network
      
  mysql:
    image: mysql:8.0.38
    container_name: db_booking
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3309:3306"
    volumes:
      - db:/var/lib/mysql
    networks:
      - booking_network

  redis:
    image: redis:7.2.4-alpine
    container_name: redis_booking
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - booking_network

  postgres:
    image: postgres:latest
    container_name: booking_postgre_db
    environment:
      POSTGRES_USER: user_booking
      POSTGRES_PASSWORD: secret
    ports:
      - "5433:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - booking_network

  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: booking_kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - booking_network

  elastic:
    image: elasticsearch:8.16.1
    container_name: booking_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - booking_network
      
volumes:
  db:
    driver: local
  postgres:
    driver: local
    name: postgres_data
  es-data:
    driver: local
    name: elasticsearch_data

networks:
  booking_network:
    driver: bridge