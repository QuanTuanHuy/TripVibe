<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4cff42b0-96a3-498e-bb25-0914fe5bcfb3" name="Changes" comment="success get data via http request">
      <change afterPath="$PROJECT_DIR$/core/domain/dto/request/send_email.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/port/email_sender_port.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/port/notification_publisher.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/service/email_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/service/retry_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/usecase/email_notification_usecase.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/core/woker/failed_notification_processor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/client/email_sender_adapter.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/kafka/configuration.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/kafka/email_producer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/eventhandler/email_consumer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/domain/constant/error.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/domain/constant/error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/domain/dto/request/update_notification_request.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/domain/dto/request/update_notification_request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/port/notification_port.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/port/notification_port.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/service/notification_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/service/notification_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/usecase/create_notification_usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/usecase/create_notification_usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/usecase/get_notification_usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/usecase/get_notification_usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/usecase/update_notification_usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/usecase/update_notification_usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/client/api_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/client/api_client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/client/user_client_adapter.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/client/user_client_adapter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/repository/adapter/notification_adapter.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/repository/adapter/notification_adapter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ui/bootstrap/all.go" beforeDir="false" afterPath="$PROJECT_DIR$/ui/bootstrap/all.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ui/controller/notification_controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/ui/controller/notification_controller.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;QuanTuanHuy&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/QuanTuanHuy/hotel_booking.git&quot;,
    &quot;accountId&quot;: &quot;027cde69-bcca-46c6-9569-51c6fd2bc91f&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/infrastructure/repository/specification/notification_specification.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2tWUx4lVu7gbOr6gci0AakmLtA6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/QuanTuanHuy/notification_service/ui.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build notification_service/cmd.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build notification_service/public.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build notification_service/ui.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;notification-v2&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/User2/project/hotel_booking/booking_service&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\User2\project\hotel_booking\notification_service\ui\eventhandler" />
      <recent name="D:\User2\project\hotel_booking\notification_service\infrastructure\repository\mapper" />
      <recent name="D:\User2\project\hotel_booking\notification_service\infrastructure\repository\adapter" />
      <recent name="D:\User2\project\hotel_booking\notification_service\core\common" />
      <recent name="D:\User2\project\hotel_booking\notification_service\core\domain" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build notification_service/ui">
    <configuration name="go build cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="notification_service" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <kind value="PACKAGE" />
      <package value="cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/QuanTuanHuy/notification_service/ui" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="notification_service" />
      <working_directory value="$PROJECT_DIR$/ui" />
      <kind value="PACKAGE" />
      <package value="github.com/QuanTuanHuy/notification_service/ui" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/ui/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build notification_service/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="notification_service" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="notification_service/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build notification_service/public" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="notification_service" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="notification_service/public" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/public/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build notification_service/ui" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="notification_service" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="notification_service/ui" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/ui/main.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build notification_service/ui" />
        <item itemvalue="Go Build.go build github.com/QuanTuanHuy/notification_service/ui" />
        <item itemvalue="Go Build.go build cmd" />
        <item itemvalue="Go Build.go build notification_service/cmd" />
        <item itemvalue="Go Build.go build notification_service/public" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-57c114c3cede-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.26053.20" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-GO-243.26053.20" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="create notification" />
    <MESSAGE value="success get data via http request" />
    <option name="LAST_COMMIT_MESSAGE" value="success get data via http request" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>