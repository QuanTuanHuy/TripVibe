spring:
  application:
    name: search_service
  elasticsearch:
    uris: http://localhost:9200
    connection-timeout: 5s
    socket-timeout: 5s

  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: search_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 10

resilience4j:
  circuitbreaker:
    instances:
      accommodationService:
        failure-rate-threshold: 50
        minimum-number-of-calls: 10
        wait-duration-in-open-state:
          seconds: 30
        permitted-number-of-calls-in-half-open-state: 5
        sliding-window-size: 20
        sliding-window-type: COUNT_BASED
        slow-call-duration-threshold:
          seconds: 2
        slow-call-rate-threshold: 50

  retry:
    instances:
        accommodationService:
          max-attempts: 3
          wait-duration:
            seconds: 1
          exponential-backoff-multiplier: 2
          retry-exceptions:
            - java.net.ConnectException
            - feign.RetryableException
            - java.lang.RuntimeException
          ignore-exceptions:
            - huy.project.search_service.core.domain.exception.AppException

server:
  port: 8085
  servlet:
    context-path: /search_service

app:
  services:
    accommodation_service:
      url: localhost:8083/accommodation_service
  elasticsearch:
    url: localhost:9200
    password: GdL=WfNXaAui4QTJaoIN
    username: elastic
  security:
    jwt:
      secret: MnAYFOKwxBOznHpxA3Wx4cJjeC3vYNtwzI6HRYT9SD++1BM9Pk32pTGETroljFsS
      expiration: 86400000
      header: Authorization
      prefix: Bearer
    filter:
      publicUrls:
        - first: /api/public/v1/search/**
          second: GET
      protectedUrls:
        - urlPattern: /api/public/v1/**
          roles:
            - ADMIN