spring:
  application:
    name: inventory_service
  datasource:
    username: user_booking
    password: secret
    url: jdbc:postgresql://localhost:5433/db_inventory_service?reWriteBatchedInserts=true
    driver-class-name: org.postgresql.Driver
  data:
    redis:
      host: 127.0.0.1
      port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        generate_statistics: true

  kafka:
    bootstrap-servers: localhost:9094
    consumer:
      group-id: tourist_group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

server:
  port: 8093
  servlet:
    context-path: /inventory_service


app:
  services:
    accommodation_service:
      url: localhost:8083/accommodation_service
  lock:
    cleanup:
      interval: 300000  # 5 minutes in milliseconds
  security:
    jwt:
      secret: MnAYFOKwxBOznHpxA3Wx4cJjeC3vYNtwzI6HRYT9SD++1BM9Pk32pTGETroljFsS
      expiration: 86400000
      header: Authorization
      prefix: Bearer
    filter:
      publicUrls:
        - first: /api/public/v1/inventories/**
          second: GET
      protectedUrls:
  redis:
    lock:
      expiration: 30000
      namespace: inventory_service