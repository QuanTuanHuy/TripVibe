spring:
  application:
    name: authentication_service

  datasource:
    username: root
    password: root
    url: jdbc:mysql://localhost:3309/authentication_service
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    redis:
      host: localhost
      port: 6379
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
app:
  services:
    notification_service:
      url: localhost:8082/notification_service/
  kafka:
    default-server: localhost:9094
  security:
    jwt:
      secret: MnAYFOKwxBOznHpxA3Wx4cJjeC3vYNtwzI6HRYT9SD++1BM9Pk32pTGETroljFsS
      expiration: 86400000  # 24 hours for backward compatibility
      # access-token-expiration: 900000  # 15 minutes for access token
      access-token-expiration: 604800000 
      refresh-token-expiration: 604800000  # 7 days for refresh token
      header: Authorization
      prefix: Bearer
    filter:
      publicUrls:
        - first: /api/public/v1/users/customer
          second: POST
        - first: /api/public/v1/users/host
          second: POST
        - first: /api/public/v1/auth/login
          second: POST
        - first: /api/public/v1/auth/refresh
          second: POST
        - first: /api/public/v1/users/otp/verify
          second: POST
      protectedUrls:
        - url-pattern: /api/public/v1/users/admin
          roles:
            - SUPER_ADMIN
#        - urlPattern: /api/public/v1/sessions/**
#          roles:
#            - USER
#            - ADMIN
#            - OWNER
server:
  port: 8081
  servlet:
    context-path: /authentication_service
